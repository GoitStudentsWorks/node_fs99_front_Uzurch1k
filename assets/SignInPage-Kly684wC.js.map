{"version":3,"file":"SignInPage-Kly684wC.js","sources":["../../src/components/SignInForm/SignInForm.jsx","../../src/pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useState, useId } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { logIn } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nimport clsx from 'clsx';\nimport css from './SignInForm.module.scss';\nimport BtnShowPassword from '../BtnShowPassword/BtnShowPassword';\nimport { LoaderDetails } from '../Loader/Loader';\n\nconst SignInForm = () => {\n  const { t } = useTranslation();\n  const loginSchema = yup.object().shape({\n    email: yup\n      .string()\n      .required(t('signInPage.emailSpanError'))\n      .email(t('signInPage.emailSpanError'))\n      .test(\n        'isValidAfterSign',\n        t('signInPage.emailSpanError'),\n        function (email) {\n          const strAfterEmailSign = email.slice(email.indexOf('@'));\n          return (\n            !strAfterEmailSign.includes('@') || strAfterEmailSign.includes('.')\n          );\n        }\n      ),\n    password: yup\n      .string()\n      .required(t('signInPage.passwordSpanError'))\n      .min(6, t('signInPage.passwordSpanError'))\n      .max(28, t('signInPage.passwordSpanError'))\n      .matches(/\\d/, t('signInPage.passwordSpanError'))\n      .matches(/[a-zA-Z]/, t('signInPage.passwordSpanError')),\n  });\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(loginSchema),\n    mode: 'onChange',\n    defaultValues: {\n      defaultValues: { email: '', password: '' },\n    },\n  });\n\n  const fieldEmailId = useId();\n  const fieldPasswordId = useId();\n  const dispatch = useDispatch();\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isLoader, setIsLoader] = useState(false);\n\n  const onSubmit = async data => {\n    const userData = { email: data.email, password: data.password };\n\n    setIsLoader(true);\n\n    try {\n      await dispatch(logIn(userData)).unwrap();\n      // toast.success('Successfully logged in!');\n      reset();\n    } catch (error) {\n      toast.error(t('signInPage.emailSpanError'));\n    } finally {\n      setIsLoader(false);\n    }\n  };\n\n  return (\n    <div className={css.signInBody}>\n      <h2 className={css.signInTitle}>{t('signInPage.signIn')}</h2>\n      <form onSubmit={handleSubmit(onSubmit)} className={css.signInForm}>\n        <label htmlFor={fieldEmailId} className={css.emailLabel}>\n          {t('signInPage.email')}\n        </label>\n        <input\n          type=\"email\"\n          id={fieldEmailId}\n          {...register('email')}\n          className={clsx({\n            [css.emailInput]: true,\n            [css.errorEmailInput]: errors.email,\n          })}\n          placeholder={t('signInPage.emailPlaceholder')}\n        />\n        {errors.email && (\n          <p className={css.errorMessage}>{errors.email.message}</p>\n        )}\n\n        <label htmlFor={fieldPasswordId} className={css.passwordLabel}>\n          {t('signInPage.password')}\n        </label>\n        <div\n          className={clsx({\n            [css.inputPasswordWrapper]: true,\n            [css.inputPasswordWrapperError]: errors.password,\n          })}\n        >\n          <input\n            type={isPasswordVisible ? 'text' : 'password'}\n            id={fieldPasswordId}\n            {...register('password')}\n            placeholder={t('signInPage.passwordPlaceholder')}\n            className={clsx({\n              [css.passwordInput]: true,\n              [css.errorPasswordInput]: errors.password,\n            })}\n          />\n          <BtnShowPassword setIsPasswordVisible={setIsPasswordVisible} />\n        </div>\n        {errors.password && (\n          <p className={css.errorMessage}>{errors.password.message}</p>\n        )}\n\n        <button type=\"submit\" className={clsx(css.btnSignIn, 'btn-def')}>\n          {isLoader ? (\n            <LoaderDetails isPositioning={true} />\n          ) : (\n            t('signInPage.signIn')\n          )}\n        </button>\n      </form>\n\n      <p className={css.questionText}>\n        {t('signInPage.dontAccount')}{' '}\n        <Link className={css.signUpLink} to=\"/signup\">\n          {t('signInPage.signUp')}\n        </Link>\n      </p>\n\n      <ToastContainer\n        className={css.Toastify}\n        position=\"top-right\"\n        autoClose={2500}\n        hideProgressBar\n        closeOnClick\n        // rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n        // transition=\"slide\"\n        closeButton={window.innerWidth > 480}\n      />\n    </div>\n  );\n};\n\nexport default SignInForm;\n","import AdvantagesSection from '../../components/AdvantagesSection/AdvantagesSection';\nimport DocumentTitle from '../../components/Layout/DocumentTitle/DocumentTitle';\nimport Section from '../../components/Layout/Section/Section';\nimport SignSection from '../../components/Layout/SignSection/SignSection';\nimport Logo from '../../components/Logo/Logo';\nimport SignInForm from '../../components/SignInForm/SignInForm';\nimport { useTranslation } from 'react-i18next';\nimport css from './SignInPage.module.scss';\n\nconst SignInPage = () => {\n  const { t } = useTranslation();\n  return (\n    <div className={css.body}>\n      <DocumentTitle>{t('page.signIn')}</DocumentTitle>\n      <Section>\n        <SignSection>\n          <Logo />\n          <SignInForm />\n        </SignSection>\n        <div className={css.visibil}>\n          <AdvantagesSection />\n        </div>\n      </Section>\n    </div>\n  );\n};\n\nexport default SignInPage;\n"],"names":["SignInForm","t","useTranslation","loginSchema","yup.object","yup.string","email","strAfterEmailSign","register","handleSubmit","errors","reset","useForm","yupResolver","fieldEmailId","useId","fieldPasswordId","dispatch","useDispatch","isPasswordVisible","setIsPasswordVisible","useState","isLoader","setIsLoader","onSubmit","data","userData","logIn","toast","jsxs","css","jsx","clsx","BtnShowPassword","LoaderDetails","Link","ToastContainer","SignInPage","DocumentTitle","Section","SignSection","Logo","AdvantagesSection"],"mappings":"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"}