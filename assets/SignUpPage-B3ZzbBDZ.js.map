{"version":3,"file":"SignUpPage-B3ZzbBDZ.js","sources":["../../src/components/SignUpForm/SignUpForm.jsx","../../src/pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { useTranslation } from 'react-i18next';\nimport { useForm } from 'react-hook-form';\nimport { useState, useId } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link } from 'react-router-dom';\nimport { registerUser } from '../../redux/auth/operations';\nimport { LoaderDetails } from '../Loader/Loader';\n\nimport BtnShowPassword from '../BtnShowPassword/BtnShowPassword';\n\nimport css from './SignUpForm.module.scss';\nimport clsx from 'clsx';\n\nconst SignUpForm = () => {\n  const { t } = useTranslation();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm({\n    resolver: yupResolver(\n      yup.object().shape({\n        email: yup\n          .string()\n          .required(t('signUpPage.emailSpanError'))\n          .email(t('signUpPage.emailSpanError'))\n          .test(\n            'isValidAfterSign',\n            t('signUpPage.emailSpanError'),\n            function (email) {\n              const strAfterEmailSign = email.slice(email.indexOf('@'));\n              return (\n                !strAfterEmailSign.includes('@') ||\n                strAfterEmailSign.includes('.')\n              );\n            }\n          ),\n        password: yup\n          .string()\n          .required(t('signUpPage.passwordSpanError'))\n          .min(6, t('signUpPage.passwordSpanError'))\n          .max(28, t('signUpPage.passwordSpanError'))\n          .matches(/\\d/, t('signUpPage.passwordSpanError'))\n          .matches(/[a-zA-Z]/, t('signUpPage.passwordSpanError')),\n        repeatPassword: yup\n          .string()\n          .oneOf(\n            [yup.ref('password'), null],\n            t('signUpPage.repeatPasswordpanErrorTwo')\n          )\n          .required(t('signUpPage.repeatPasswordpanError')),\n      })\n    ),\n    mode: 'onChange',\n    defaultValues: { email: '', password: '', repeatPassword: '' },\n  });\n\n  const fieldEmailId = useId();\n  const fieldPasswordId = useId();\n  const fieldRepeatPasswordId = useId();\n  const dispatch = useDispatch();\n\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\n  const [isRepeatPasswordVisible, setIsRepeatPasswordVisible] = useState(false);\n  const [isLoader, setIsLoader] = useState(false);\n\n  const onSubmit = async data => {\n    const username = data.email ? data.email.split('@')[0] : 'User';\n\n    const userData = {\n      name: username,\n      email: data.email,\n      password: data.password,\n    };\n\n    setIsLoader(true);\n\n    try {\n      await dispatch(registerUser(userData)).unwrap();\n      // toast.success('Successfully registered!');\n      reset();\n    } catch (error) {\n      toast.error(t('signUpPage.usedEmail'));\n    } finally {\n      setIsLoader(false);\n    }\n  };\n\n  return (\n    <div className={css.signUpBody}>\n      <h2 className={css.signUpTitle}>{t('signUpPage.signUp')}</h2>\n      <form onSubmit={handleSubmit(onSubmit)} className={css.signUpForm}>\n        <label htmlFor={fieldEmailId} className={css.emailLabel}>\n          {t('signUpPage.email')}\n        </label>\n        <input\n          type=\"email\"\n          id={fieldEmailId}\n          {...register('email')}\n          className={clsx({\n            [css.emailInput]: true,\n            [css.errorEmailInput]: errors.email,\n          })}\n          placeholder={t('signUpPage.emailPlaceholder')}\n        />\n        {errors.email && (\n          <p className={css.errorMessage}>{errors.email.message}</p>\n        )}\n\n        <label htmlFor={fieldPasswordId} className={css.passwordLabel}>\n          {t('signUpPage.password')}\n        </label>\n        <div\n          className={clsx({\n            [css.inputPasswordWrapper]: true,\n            [css.inputPasswordWrapperError]: errors.password,\n          })}\n        >\n          <input\n            type={isPasswordVisible ? 'text' : 'password'}\n            id={fieldPasswordId}\n            {...register('password')}\n            placeholder={t('signUpPage.passwordPlaceholder')}\n            className={clsx({\n              [css.passwordInput]: true,\n              [css.errorPasswordInput]: errors.password,\n            })}\n          />\n          <BtnShowPassword setIsPasswordVisible={setIsPasswordVisible} />\n        </div>\n        {errors.password && (\n          <p className={css.errorMessage}>{errors.password.message}</p>\n        )}\n\n        <label htmlFor={fieldRepeatPasswordId} className={css.passwordLabel}>\n          {t('signUpPage.repeatPassword')}\n        </label>\n        <div\n          className={clsx({\n            [css.inputPasswordWrapper]: true,\n            [css.inputPasswordWrapperError]: errors.repeatPassword,\n          })}\n        >\n          <input\n            type={isRepeatPasswordVisible ? 'text' : 'password'}\n            id={fieldRepeatPasswordId}\n            {...register('repeatPassword')}\n            placeholder={t('signUpPage.repeatPassword')}\n            className={clsx({\n              [css.passwordInput]: true,\n              [css.errorPasswordInput]: errors.repeatPassword,\n            })}\n          />\n          <BtnShowPassword setIsPasswordVisible={setIsRepeatPasswordVisible} />\n        </div>\n        {errors.repeatPassword && (\n          <p className={css.errorMessage}>{errors.repeatPassword.message}</p>\n        )}\n\n        <button className={clsx(css.btnSignUp, 'btn-def')} type=\"submit\">\n          {isLoader ? (\n            <LoaderDetails isPositioning={true} />\n          ) : (\n            t('signUpPage.signUp')\n          )}\n        </button>\n      </form>\n\n      <p className={css.questionText}>\n        {t('signUpPage.textAlready')}{' '}\n        <Link className={css.signInLink} to=\"/signin\">\n          {t('signUpPage.signIn')}\n        </Link>\n      </p>\n\n      <ToastContainer\n        className={css.Toastify}\n        position=\"top-right\"\n        autoClose={2500}\n        hideProgressBar\n        closeOnClick\n        // rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n        // transition=\"slide\"\n        closeButton={window.innerWidth > 480}\n      />\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import AdvantagesSection from '../../components/AdvantagesSection/AdvantagesSection';\nimport DocumentTitle from '../../components/Layout/DocumentTitle/DocumentTitle';\nimport Section from '../../components/Layout/Section/Section';\nimport SignSection from '../../components/Layout/SignSection/SignSection';\nimport Logo from '../../components/Logo/Logo';\nimport SignUpForm from '../../components/SignUpForm/SignUpForm';\nimport { useTranslation } from 'react-i18next';\n\nimport css from './SignUpPage.module.scss';\n\nconst SignUpPage = () => {\n  const { t } = useTranslation();\n  return (\n    <div className={css.body}>\n      <DocumentTitle>{t('page.signUp')}</DocumentTitle>\n\n      <Section>\n        <SignSection>\n          <Logo />\n          <SignUpForm />\n        </SignSection>\n        <div className={css.visibil}>\n          <AdvantagesSection />\n        </div>\n      </Section>\n    </div>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["SignUpForm","t","useTranslation","register","handleSubmit","errors","reset","useForm","yupResolver","yup.object","yup.string","email","strAfterEmailSign","yup.ref","fieldEmailId","useId","fieldPasswordId","fieldRepeatPasswordId","dispatch","useDispatch","isPasswordVisible","setIsPasswordVisible","useState","isRepeatPasswordVisible","setIsRepeatPasswordVisible","isLoader","setIsLoader","onSubmit","data","userData","registerUser","toast","jsxs","css","jsx","clsx","BtnShowPassword","LoaderDetails","Link","ToastContainer","SignUpPage","DocumentTitle","Section","SignSection","Logo","AdvantagesSection"],"mappings":"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"}